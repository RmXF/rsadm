#!/bin/bash

# Archivo de configuraci√≥n
BANNER_FILE="/etc/issue.net"
BACKUP_FILE="/etc/issue.net.bak"
LOG_FILE="/var/log/banner_rs.log"
TEMPLATE_DIR="/etc/banner_rs_templates"
REMOTE_URL="https://raw.githubusercontent.com/RmXF/rsadm/refs/heads/main/banners"  # Ajusta la URL seg√∫n ubicaci√≥n remota
CONFIG_FILE="/etc/banner_rs.conf"

# Colores
RED="\e[91m"
GREEN="\e[92m"
YELLOW="\e[93m"
BLUE="\e[94m"
MAGENTA="\e[95m"
CYAN="\e[96m"
WHITE="\e[97m"
RESET="\e[0m"

# Verifica permisos root
if [[ $EUID -ne 0 ]]; then
  echo -e "${RED}Este script requiere privilegios de superusuario.${RESET}"
  exit 1
fi

# Crear backup si no existe
[[ ! -f $BACKUP_FILE ]] && cp "$BANNER_FILE" "$BACKUP_FILE"
mkdir -p "$TEMPLATE_DIR"

# Logs
log_change() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] Usuario: $SUDO_USER - Acci√≥n: $1" >> "$LOG_FILE"
}

barra_carga() {
    echo -ne "\n ${CYAN}Aplicando cambios${RESET} ["
    for i in {1..10}; do echo -ne "üü©"; sleep 0.05; done
    for i in {1..10}; do echo -ne "‚¨ú"; sleep 0.03; done
    echo -e "] ${GREEN}¬°Hecho!${RESET}"
}

aplicar_banner() {
    cp "$1" "$BANNER_FILE"
    barra_carga
    log_change "Banner aplicado desde plantilla $1"
}

crear_banner() {
    echo -e "${BLUE}Escrib√≠ tu nuevo banner (Ctrl+D para terminar):${RESET}"
    cat > /tmp/banner_rs
    barra_carga
    cp /tmp/banner_rs "$BANNER_FILE"
    echo -e "${GREEN}Banner actualizado correctamente.${RESET}"
    log_change "Banner personalizado creado manualmente"
}

ver_banner() {
    echo -e "\n${YELLOW}Contenido actual del banner:${RESET}\n"
    cat "$BANNER_FILE"
    echo -e "\n${CYAN}Presiona ENTER para volver al men√∫...${RESET}"
    read
}

eliminar_banner() {
    rm -f "$BANNER_FILE" && touch "$BANNER_FILE"
    echo -e "${GREEN}Banner eliminado.${RESET}"
    log_change "Banner eliminado"
}

restaurar_banner() {
    cp "$BACKUP_FILE" "$BANNER_FILE"
    echo -e "${GREEN}Banner original restaurado.${RESET}"
    log_change "Banner restaurado desde backup"
}

ver_logs() {
    echo -e "\n${MAGENTA}Historial de cambios:${RESET}"
    cat "$LOG_FILE"
    echo -e "\n${CYAN}Presiona ENTER para continuar...${RESET}"
    read
}

descargar_banners_remotos() {
    echo -e "\n${CYAN}Descargando banners desde el repositorio remoto...${RESET}"
    for i in {1..5}; do
        wget -q "${REMOTE_URL}/banner$i" -O "$TEMPLATE_DIR/banner$i"
    done
    echo -e "${GREEN}Banners descargados y guardados en $TEMPLATE_DIR.${RESET}"
    log_change "Descarga de banners remotos"
    sleep 1
}

configurar_rotacion() {
    echo -ne "\n${CYAN}Configurar rotaci√≥n autom√°tica (diaria/semanal): ${RESET}"
    read tipo
    echo "ROTATION_TYPE=$tipo" > "$CONFIG_FILE"
    echo -ne "${CYAN}Hora del d√≠a para rotar (formato 24h, ej: 03): ${RESET}"
    read hora
    echo "ROTATION_HOUR=$hora" >> "$CONFIG_FILE"
    log_change "Configuraci√≥n de rotaci√≥n: $tipo a las $hora hs"
    echo -e "${GREEN}Configuraci√≥n guardada.${RESET}"
}

rotar_banner_automaticamente() {
    [[ -f $CONFIG_FILE ]] || return
    source "$CONFIG_FILE"
    hora_actual=$(date +"%H")
    dia_actual=$(date +"%u")

    if [[ "$ROTATION_TYPE" == "diaria" && "$hora_actual" == "$ROTATION_HOUR" ]]; then
        banner="$(ls $TEMPLATE_DIR | sort | shuf -n1)"
        [[ -f "$TEMPLATE_DIR/$banner" ]] && aplicar_banner "$TEMPLATE_DIR/$banner"
    elif [[ "$ROTATION_TYPE" == "semanal" && "$dia_actual" == "1" && "$hora_actual" == "$ROTATION_HOUR" ]]; then
        banner="$(ls $TEMPLATE_DIR | sort | shuf -n1)"
        [[ -f "$TEMPLATE_DIR/$banner" ]] && aplicar_banner "$TEMPLATE_DIR/$banner"
    fi
}

menu_plantillas() {
    echo -e "\n${CYAN}Plantillas disponibles:${RESET}"
    ls "$TEMPLATE_DIR"
    echo -ne "\nNombre de la plantilla a aplicar: "
    read plantilla
    if [[ -f "$TEMPLATE_DIR/$plantilla" ]]; then
        aplicar_banner "$TEMPLATE_DIR/$plantilla"
    else
        echo -e "${RED}Plantilla no encontrada.${RESET}"
    fi
    sleep 1
}

crear_plantilla() {
    echo -ne "\nNombre para la nueva plantilla: "
    read nombre
    echo -e "${YELLOW}Escrib√≠ el contenido (Ctrl+D para guardar):${RESET}"
    cat > "$TEMPLATE_DIR/$nombre"
    echo -e "${GREEN}Plantilla '$nombre' guardada.${RESET}"
    log_change "Plantilla creada: $nombre"
    sleep 1
}

menu() {
  clear
  echo -e "${MAGENTA}=================================================="
  echo -e "        ${YELLOW}GESTOR AVANZADO DE BANNERS SSH RS${MAGENTA}"
  echo -e "==================================================${RESET}"
  echo -e "${CYAN}1)${RESET} Crear nuevo banner personalizado"
  echo -e "${CYAN}2)${RESET} Ver banner actual"
  echo -e "${CYAN}3)${RESET} Aplicar banner desde plantilla"
  echo -e "${CYAN}4)${RESET} Crear nueva plantilla"
  echo -e "${CYAN}5)${RESET} Restaurar banner original"
  echo -e "${CYAN}6)${RESET} Eliminar banner actual"
  echo -e "${CYAN}7)${RESET} Ver historial de cambios"
  echo -e "${CYAN}8)${RESET} Descargar banners remotos"
  echo -e "${CYAN}9)${RESET} Configurar rotaci√≥n autom√°tica"
  echo -e "${CYAN}0)${RESET} Salir"
  echo -ne "\nSelecciona una opci√≥n: "
  read opc
  case $opc in
    1) crear_banner ;;
    2) ver_banner ;;
    3) menu_plantillas ;;
    4) crear_plantilla ;;
    5) restaurar_banner ;;
    6) eliminar_banner ;;
    7) ver_logs ;;
    8) descargar_banners_remotos ;;
    9) configurar_rotacion ;;
    0) exit 0 ;;
    *) echo -e "${RED}Opci√≥n inv√°lida...${RESET}"; sleep 1 ;;
  esac
}

rotar_banner_automaticamente

while true; do
    menu
done
